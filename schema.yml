openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /course/:
    get:
      operationId: course_list
      tags:
      - course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
          description: ''
    post:
      operationId: course_create
      tags:
      - course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /course/{id}/:
    get:
      operationId: course_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Курс.
        required: true
      tags:
      - course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    put:
      operationId: course_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Курс.
        required: true
      tags:
      - course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    patch:
      operationId: course_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Курс.
        required: true
      tags:
      - course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    delete:
      operationId: course_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Курс.
        required: true
      tags:
      - course
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /lesson/:
    get:
      operationId: lesson_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - lesson
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonList'
          description: ''
    post:
      operationId: lesson_create
      tags:
      - lesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lesson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lesson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lesson'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
  /lesson/{id}/:
    get:
      operationId: lesson_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lesson
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
  /lesson/create/:
    post:
      operationId: lesson_create_create
      tags:
      - lesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lesson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lesson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lesson'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
  /lesson/delete/{id}/:
    delete:
      operationId: lesson_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lesson
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /lesson/update/{id}/:
    put:
      operationId: lesson_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lesson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lesson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lesson'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
    patch:
      operationId: lesson_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLesson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLesson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLesson'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
  /subscription/:
    get:
      operationId: subscription_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - subscription
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubscriptionList'
          description: ''
  /subscription/create/:
    post:
      operationId: subscription_create_create
      tags:
      - subscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
  /users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /users/token/:
    post:
      operationId: users_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /users/token/refresh/:
    post:
      operationId: users_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /users/user_detail/{id}/:
    get:
      operationId: users_user_detail_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
components:
  schemas:
    Course:
      type: object
      properties:
        name:
          type: string
          title: Название курса
          maxLength: 50
        description:
          type: string
          nullable: true
          title: Описание курса
          maxLength: 255
        lessons:
          type: array
          items:
            $ref: '#/components/schemas/Lesson'
        count_lessons:
          type: string
          readOnly: true
      required:
      - count_lessons
      - lessons
      - name
    Lesson:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название урока
          maxLength: 50
        description:
          type: string
          nullable: true
          title: Описание урока
          maxLength: 255
        preview:
          type: string
          format: uri
          nullable: true
          title: Превью
        video_url:
          type: string
          format: uri
          nullable: true
          title: URL видео
          maxLength: 200
        link:
          type: string
          format: uri
          nullable: true
          title: Ссылка
          maxLength: 200
        course:
          type: integer
          title: Lessons
        owner:
          type: integer
          nullable: true
      required:
      - course
      - id
      - name
    PaginatedLessonList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Lesson'
    PaginatedSubscriptionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
    PatchedCourse:
      type: object
      properties:
        name:
          type: string
          title: Название курса
          maxLength: 50
        description:
          type: string
          nullable: true
          title: Описание курса
          maxLength: 255
        lessons:
          type: array
          items:
            $ref: '#/components/schemas/Lesson'
        count_lessons:
          type: string
          readOnly: true
    PatchedLesson:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название урока
          maxLength: 50
        description:
          type: string
          nullable: true
          title: Описание урока
          maxLength: 255
        preview:
          type: string
          format: uri
          nullable: true
          title: Превью
        video_url:
          type: string
          format: uri
          nullable: true
          title: URL видео
          maxLength: 200
        link:
          type: string
          format: uri
          nullable: true
          title: Ссылка
          maxLength: 200
        course:
          type: integer
          title: Lessons
        owner:
          type: integer
          nullable: true
    PatchedUser:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
    Payment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        payment_date:
          type: string
          format: date
          readOnly: true
          title: Дата_оплаты
        payment_sum:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Сумма_оплаты
        payment_method:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodEnum'
          title: Способ_оплаты
        user:
          type: integer
      required:
      - id
      - payment_date
      - payment_method
      - payment_sum
      - user
    PaymentMethodEnum:
      enum:
      - '1'
      - '2'
      type: string
      description: |-
        * `1` - Наличные
        * `2` - Перевод
    Subscription:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
          title: Пользователь
        course:
          type: integer
          title: Курс
      required:
      - course
      - id
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - email
    UserProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          nullable: true
          title: Телефон
          maxLength: 12
        city:
          type: string
          nullable: true
          title: Город
          maxLength: 100
        avatar:
          type: string
          format: uri
          nullable: true
          title: Аватарка
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
          readOnly: true
      required:
      - email
      - id
      - payments
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
